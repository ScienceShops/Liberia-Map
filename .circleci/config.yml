version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout
      - setup_remote_docker

      - restore_cache:
          name: Restoring Docker image cache
          keys:
            - "docker-{{ .Branch }}"
          paths:
            - /caches/app.tar

      - restore_cache:
          name: Restoring PIP cache
          keys:
            - "pip-{{ .Branch }}"
          paths:
            - /app/.cache/

      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true

      - run:
          name: Build application Docker image
          command: >
            docker build
            --cache-from=${DOCKER_IMAGE}:${DOCKER_TAG}
            -t ${DOCKER_IMAGE}:${DOCKER_TAG} .

      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar ${DOCKER_IMAGE}:${DOCKER_TAG}

      - save_cache:
          name: Caching Docker images
          key: "docker-{{ .Branch }}-{{ epoch }}"
          paths:
            - /caches/app.tar

      - save_cache:
          name: Caching PIP
          key: "pip-{{ .Branch }}-{{ epoch }}"
          paths:
            - /app/.cache/

      # might need to gcloud init
      - run: 
          name: Activate GCP environment
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud auth --quiet configure-docker

      - run:
          name: Push docker image to GCE
          command: |
            docker push ${DOCKER_IMAGE}:${DOCKER_TAG}

  deploy:
    working_directory: /app
    docker:
      - image: google/cloud-sdk

    steps:
      - run:
          name: Activate GCP environment
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud auth --quiet configure-docker

      - run:
          name: Restart deployment
          command: kubectl rollout restart deployment liberia-deployment

      - run:
          name: Restart deployment
          # Kill the other pod taking up to much space/resources.
          # If we had more money, we could just increase size of node.
          command: kubectl get pods | awk '/liberia.*Running/{print $1}' | xargs kubectl delete pod

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master

      - deploy:
          requires:
            - build

